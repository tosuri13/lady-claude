AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  DiscordApplicationId:
    Type: String
    Description: "Application ID for Discord Bot"
  DiscordBotToken:
    Type: String
    Description: "Bot Token for Discord Bot"
  DiscordPublicKey:
    Type: String
    Description: "Public Key for Discord Bot"
  DiscordChannelId:
    Type: String
    Description: "Target Channel ID for Notification"
  MinecraftBackupBucketName:
    Type: String
    Description: "Bucket Name for Minecraft Backup"
  MinecraftInstanceId:
    Type: String
    Description: "Target Instance ID for Minecraft"
  MinecraftServerVersion:
    Type: String
    Description: "Target Minecraft Server Version to launch"
  RecipeVectorstoreBucketName:
    Type: String
    Description: "Bucket Name for Recipe's vectorstore"

Globals:
  Function:
    Timeout: 300
    MemorySize: 128

Resources:
  LadyClaudeApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: lady-claude-api
      OpenApiVersion: 3.0.0
      StageName: v1

  LadyClaudeWorkerReplyTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: lady-claude-worker-reply-topic

  LadyClaudeApiPostFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      Environment:
        Variables:
          DISCORD_PUBLIC_KEY: !Ref DiscordPublicKey
          WORKER_REPLY_TOPIC_ARN: !Ref LadyClaudeWorkerReplyTopic
      Events:
        LadyClaudeApiEvents:
          Type: Api
          Properties:
            Path: /
            Method: POST
            RestApiId: !Ref LadyClaudeApiGateway
      FunctionName: lady-claude-api-post-function
      Handler: lady_claude.function.api.post.function.handler
      MemorySize: 1024
      Role: !GetAtt LadyClaudeFunctionRole.Arn
      Runtime: python3.12

  # NOTE: 2024年9月1日からConnpassのスクレイピング禁止が明記されるため、一旦Connpassイベント通知機能も停止
  # LadyClaudeWorkerNotificationConnpassFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: src
  #     EventInvokeConfig:
  #       MaximumRetryAttempts: 0
  #     Environment:
  #       Variables:
  #         DISCORD_APPLICATION_ID: !Ref DiscordApplicationId
  #         DISCORD_BOT_TOKEN: !Ref DiscordBotToken
  #         DISCORD_CHANNEL_ID: !Ref DiscordChannelId
  #     Events:
  #       LadyClaudeScheduleEvent:
  #         Type: Schedule
  #         Properties:
  #           Schedule: "cron(0 23 ? * 7 *)"
  #           Name: lady-claude-worker-notification-connpass-rule
  #     FunctionName: lady-claude-worker-notification-connpass-function
  #     Handler: lady_claude.function.worker.notification.connpass.function.handler
  #     Role: !GetAtt LadyClaudeFunctionRole.Arn
  #     Runtime: python3.12

  LadyClaudeWorkerNotificationGarbageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          DISCORD_APPLICATION_ID: !Ref DiscordApplicationId
          DISCORD_BOT_TOKEN: !Ref DiscordBotToken
          DISCORD_CHANNEL_ID: !Ref DiscordChannelId
      Events:
        LadyClaudeScheduleEvent:
          Type: Schedule
          Properties:
            Schedule: "cron(0 14 ? * 1,2,4,5 *)"
            Name: lady-claude-worker-notification-garbage-rule
      FunctionName: lady-claude-worker-notification-garbage-function
      Handler: lady_claude.function.worker.notification.garbage.function.handler
      Role: !GetAtt LadyClaudeFunctionRole.Arn
      Runtime: python3.12

  LadyClaudeWorkerReplyAskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          DISCORD_APPLICATION_ID: !Ref DiscordApplicationId
          DISCORD_BOT_TOKEN: !Ref DiscordBotToken
          DISCORD_CHANNEL_ID: !Ref DiscordChannelId
      Events:
        LadyClaudeSnsEvents:
          Type: SNS
          Properties:
            FilterPolicy:
              command:
                - ask
            Topic: !Ref LadyClaudeWorkerReplyTopic
      FunctionName: lady-claude-worker-reply-ask-function
      Handler: lady_claude.function.worker.reply.ask.function.handler
      Role: !GetAtt LadyClaudeFunctionRole.Arn
      Runtime: python3.12

  LadyClaudeWorkerReplyMinecraftFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          DISCORD_APPLICATION_ID: !Ref DiscordApplicationId
          DISCORD_BOT_TOKEN: !Ref DiscordBotToken
          DISCORD_CHANNEL_ID: !Ref DiscordChannelId
          MINECRAFT_BACKUP_BUCKET_NAME: !Ref MinecraftBackupBucketName
          MINECRAFT_INSTANCE_ID: !Ref MinecraftInstanceId
          MINECRAFT_SERVER_VERSION: !Ref MinecraftServerVersion
      Events:
        LadyClaudeSnsEvents:
          Type: SNS
          Properties:
            FilterPolicy:
              command:
                - minecraft
            Topic: !Ref LadyClaudeWorkerReplyTopic
      FunctionName: lady-claude-worker-reply-minecraft-function
      Handler: lady_claude.function.worker.reply.minecraft.function.handler
      Role: !GetAtt LadyClaudeFunctionRole.Arn
      Runtime: python3.12

  LadyClaudeWorkerReplyRecipeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Environment:
        Variables:
          DISCORD_APPLICATION_ID: !Ref DiscordApplicationId
          DISCORD_BOT_TOKEN: !Ref DiscordBotToken
          DISCORD_CHANNEL_ID: !Ref DiscordChannelId
          RECIPE_VECTORSTORE_BUCKET_NAME: !Ref RecipeVectorstoreBucketName
      Events:
        LadyClaudeSnsEvents:
          Type: SNS
          Properties:
            FilterPolicy:
              command:
                - recipe
            Topic: !Ref LadyClaudeWorkerReplyTopic
      FunctionName: lady-claude-worker-reply-recipe-function
      Handler: lady_claude.function.worker.reply.recipe.function.handler
      Role: !GetAtt LadyClaudeFunctionRole.Arn
      Runtime: python3.12

  LadyClaudeFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: lady-claude-function-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - bedrock:InvokeModel
                  - ec2:DescribeInstances
                  - ec2:StartInstances
                  - ec2:StopInstances
                  - s3:GetObject
                  - s3:PutObject
                  - sns:Publish
                  - sns:Subscribe
                  - ssm:GetCommandInvocation
                  - ssm:SendCommand
                Resource: "*"
      RoleName: lady-claude-function-role
